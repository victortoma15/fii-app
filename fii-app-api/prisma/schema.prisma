generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  first_name String     @default("")
  last_name  String     @default("")
  is_teacher Boolean    @default(false)
  email      String     @unique
  password   String
  Student    Student?
  Teacher    Teacher?
  Material   Material[]
}

model Student {
  id         Int              @id @default(autoincrement())
  user_id    Int              @unique
  student_id Int              @unique
  user       User             @relation(fields: [user_id], references: [id])
  year       Int
  group      String
  subjects   StudentSubject[]
  grades     Grade[]
}

model Teacher {
  id         Int     @id @default(autoincrement())
  user_id    Int     @unique
  teacher_id Int     @unique
  user       User    @relation(fields: [user_id], references: [id])
  subject_id Int
  degree     String
  subject    Subject @relation(fields: [subject_id], references: [id], name: "TeacherSubjects")
  grades     Grade[]
}

model Subject {
  id         Int              @id @default(autoincrement())
  subject_id Int              @unique
  name       String
  credits    Int
  year       Int
  teachers   Teacher[]        @relation("TeacherSubjects")
  students   StudentSubject[]
  grades     Grade[]
  Material   Material[]
}

model StudentSubject {
  student_id Int
  subject_id Int
  student    Student @relation(fields: [student_id], references: [id])
  subject    Subject @relation(fields: [subject_id], references: [id])

  @@id([student_id, subject_id])
}

model Grade {
  id         Int      @id @default(autoincrement())
  grade      Int      @default(0)
  student_id Int
  subject_id Int
  teacher_id Int
  created_at DateTime @default(now()) // Add this line to store the date and time of grade creation
  student    Student  @relation(fields: [student_id], references: [id])
  subject    Subject  @relation(fields: [subject_id], references: [id])
  teacher    Teacher  @relation(fields: [teacher_id], references: [id])
}

model Material {
  id          Int      @id @default(autoincrement())
  name        String
  type        String
  path        String
  subject_id  Int
  uploaded_by Int
  approved    Boolean  @default(false)
  created_at  DateTime @default(now())
  category    String

  subject  Subject @relation(fields: [subject_id], references: [id])
  uploader User    @relation(fields: [uploaded_by], references: [id])
}
